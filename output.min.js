import t,{Router as e}from"express";import s from"morgan";import{createServer as a}from"http";import{fileURLToPath as n}from"url";import r,{dirname as o,join as u}from"path";import"dotenv/config";import i from"cors";import{Server as d}from"socket.io";import{PrismaClient as c}from"@prisma/client";import m from"jsonwebtoken";import g from"md5";import l from"axios";import{promisify as h}from"util";import w from"node-cache";import p from"multer";import"dotenv/config.js";const y=new c,f=(t,e)=>String(Math.floor(Math.random()*(e-t+1))+t),b=t=>/^[0-9]*\d$/.test(t);const S=async t=>{const{nl:e,nh:s,sl:a,sh:n,sp:r,sm:o}=await y.crashedplane.findFirst({where:{id:1}});return 0===t?function(t,e){const s=t+Math.random()*(e-t);return Math.round(100*s)/100}(Number(e),Number(s)):function(t,e,s,a){return function(t,e,s,n){const r=Math.max(0,Math.min(100,s))/100;let o;do{o=Math.random()<r?t+Math.random()*n:t+n+Math.random()*(e-(t+n))}while(parseFloat(o.toFixed(2))<=a);return o.toFixed(2)}(a=parseFloat(a),s,t,e-a)}(Number(r),Number(o),Number(n),a)},j=async()=>{try{return(await y.autoaviator.findMany()).reduce(((t,e)=>t+e.betAmount),0)}catch(t){return console.error(t),0}},v=async t=>{try{const e=new Date(t).toISOString();return(await y.aviator.findMany({where:{withdrawAmount:{not:0},withdrawTime:{gte:e}}})).reduce(((t,e)=>t+e.withdrawAmount),0)}catch(t){return console.error(t),0}};async function M(t,e,s,a){try{const s=await l.get(`https://www.fast2sms.com/dev/bulkV2?authorization=7P2crkB6ZCtqLDemhybaVg3snARSfMiIxJHY9QlOGuXzKo1wvdvSXflbLIJDQNKF6Ocz3qi5A9t8UP7a&variables_values=${e}&route=otp&numbers=${t}`);return s.data}catch(t){return console.error("Error sending SMS:",t),995===t?.response?.data?.status_code?a.status(400).json({message:"Sorry, you have exceeded the maximum limit for OTP requests. Please try again later.",status:!1}):a.status(500).json({message:"Failed to send OTP via SMS. Please try again later.",status:!1})}}const k=e();k.post("/register",(async(t,e,s)=>{let a=(new Date).getTime(),{phone:n,password:r,promocode:o,otp:u,email:i,gender:d,name:c}=t.body,m=f(1e4,99999),l="Member"+f(1e4,99999),h=(t=>{let e="",s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";for(let a=0;a<t;a++)e+=s.charAt(Math.floor(52*Math.random()));return e})(5)+f(1e4,99999),w=(t=>{let e="";return e=t.headers["x-forwarded-for"]?t.headers["x-forwarded-for"].split(",")[0]:t.connection&&t.connection.remoteAddress?t.connection.remoteAddress:t.ip,e})(t),p=(()=>{const t=new Date;return new Date(t.getTime()).toISOString()})();if(!n||!r||!u)return e.status(400).json({message:"DATA ERROR!!!",status:!1});const S=g(r);if(n.length<9||n.length>10||!b(n))return e.status(400).json({message:"Phone number must be equal to 9 or 10 digits",status:!1});try{const t=await y.users.findFirst({where:{phone:String(n)}});let s;s=o?await y.users.count({where:{code:o}}):0;let r=s?o:"6fGGw42409";if(t){let s=t;if(s.time_otp&&new Date(s.time_otp).getTime()-a>0){await y.users.deleteMany({where:{phone:String(n)}});const t=await y.refer.findMany(),s=t[0].parentCommission,a=t[0].notReferCommission,o=t[0].friendCommission;let i;return await y.users.updateMany({where:{code:r},data:{money:{increment:s}}}),i="6fGGw42409"===r?a:o,await y.users.create({data:{id_user:m,phone:n,name_user:l,password:S,money:i,code:h,invite:r,veri:1,otp:u,ip_address:w,status:0,time:p}}),e.status(200).json({message:"Registeration Successfull",status:!0})}return e.status(400).json({message:"Otp has been expired...",status:!1,timeStamp:a})}return e.status(400).json({message:"Invalid Otp",status:!1,timeStamp:a})}catch(t){return e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/login",(async(t,e,s)=>{const{phone:a,password:n}=t.body;if(!a||!n)return e.status(400).json({message:"Bad Request: Missing required parameters",status:!1});if(a.length<9||a.length>10||!b(a))return e.status(400).json({message:"phone error",status:!1});try{const t=await y.users.findFirst({where:{phone:String(a)}});if(!t)return e.status(401).json({message:"Incorrect phone or Password",status:!1});if(g(n)===t.password){const s=m.sign({phone:t.phone},process.env.JWT_ACCESS_TOKEN,{expiresIn:"7d"});return await y.users.updateMany({where:{phone:String(a)},data:{token:s}}),e.status(200).json({message:"Login Success",status:!0,token:s,value:s})}return e.status(401).json({message:"Account has been locked or Incorrect phone or Password",status:!1})}catch(t){return console.error(t),e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/otp/verify",(async(t,e,s)=>{const a=t.body.phone;console.log("ðŸš€ ~ verifyCode ~ phone:",a);const n=f(1e5,999999),r=Date.now(),o=120500;if(a.length<9||a.length>10||!b(a))return e.status(400).json({message:"Phone number must be equal to 9 or 10 digits",status:!1});try{return await M(a,n,0,e),await y.users.upsert({where:{phone:a},update:{otp:n,time_otp:new Date(r+o).toISOString()},create:{phone:a,otp:n,veri:0,time_otp:new Date(r+o).toISOString()}}),e.status(200).json({message:"SMS sent successfully",status:!0,timeStamp:r,timeEnd:r+o})}catch(t){return console.error("Error in verifyCode:",t),e.status(500).json({message:"Internal server error",status:!1})}})).post("/resetPassword",(async(t,e)=>{let s=t.body.phone,a=t.body.otp,n=t.body.pwd,r=(new Date).getTime(),o=+new Date+12e4+500,u=f(1e5,999999);if(s.length<9||s.length>10||!b(s))return e.status(400).json({message:"phone error",status:!1});try{const t=(await y.users.findMany({where:{phone:String(s)}}))[0];if(!t)return e.status(200).json({message:"Account does not exist",status:!1,timeStamp:r});if(t.time_otp&&new Date(t.time_otp).getTime()-r>0){if(t.otp==a){await y.users.updateMany({where:{phone:String(s)},data:{password:g(n),otp:u,time_otp:new Date(o).toISOString()}});return e.status(200).json({message:"Change password successfully",status:!0,timeStamp:r,timeEnd:o})}return e.status(200).json({message:"OTP code is incorrect",status:!1,timeStamp:r})}return e.status(200).json({message:"OTP code has expired",status:!1,timeStamp:r})}catch(t){return e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/otp/verify/reset",(async(t,e)=>{let s=t.body.phone,a=(new Date).getTime(),n=+new Date+12e4+500,r=f(1e5,999999);if(s.length<9||s.length>10||!b(s))return e.status(400).json({message:"Phone number must be equal to 9 or 10 digits",status:!1});try{const t=(await y.users.findMany({where:{phone:String(s)}}))[0];if(!t)return e.status(200).json({message:"Account does not exist",status:!1,timeStamp:a});if(!(t.time_otp&&new Date(t.time_otp).getTime()-a<=0))return e.status(200).json({message:"Send SMS regularly",status:!1,timeStamp:a});if("SMS sent successfully."==(await M(s,r,0,e)).message)return await y.users.updateMany({where:{phone:String(s)},data:{otp:r,time_otp:new Date(n).toISOString()}}),e.status(200).json({message:"Submitted successfully",status:!0,timeStamp:a,timeEnd:n})}catch(t){}}));const N=(_=async(t,e,s)=>{let a;if(t.headers.authorization&&t.headers.authorization.startsWith("Bearer")&&(a=t.headers.authorization.split(" ")[1]),!a)return e.redirect(302,`${process.env.client}/auth/login`);const n=await h(m.verify)(a,process.env.JWT_ACCESS_TOKEN),r=await y.users.findFirst({where:{phone:n.phone}});if(!r)return e.redirect(302,`${process.env.client}/auth/login`);const o=await y.bank.findFirst({where:{phone:n.phone}}),u=await y.banksettings.findMany();t.user=r,t.bank=o,u.length?t.key=u[0].key:t.key="0000000",s()},(t,e,s)=>{_(t,e,s).catch(s)});var _;const F=new w({stdTTL:5});async function T(t,e){try{const s=`${t}-${e}`;return void 0===F.get(s)&&(F.set(s,!0,5),!0)}catch(t){return console.error("Error checking rate limit:",t),!1}}const D=p.diskStorage({destination:(t,e,s)=>{s(null,"uploads/")},filename:function(t,e,s){const a=Date.now()+r.extname(e.originalname);t.barCode=a,s(null,a)}}),x=p.diskStorage({destination:(t,e,s)=>{s(null,"uploads/")},filename:function(t,e,s){const a=Date.now()+r.extname(e.originalname);t.screenshot=a,s(null,a)}}),I=(t,e,s)=>{e.mimetype.startsWith("image")?s(null,!0):s(new Error("Not An Image, please upload an iamge!.."),!1)},A=p({storage:D,fileFilter:I,limits:{fileSize:1/0}}),C=p({storage:x,fileFilter:I,limits:{fileSize:1/0}}),R=e();R.get("/getUserInfo",N,(async(t,e,s)=>{try{return e.status(200).json({status:!0,user:t.user,bank:t.bank,key:t.key})}catch(t){return e.status(404).json({status:!1,message:t.message})}})).post("/withdraw",(async(t,e,s)=>{try{const{phone:s,withdrawamount:a,bankName:n,accountNumber:r,upi:o,accountHolderName:u,ifsc:i}=t.body,d=await y.users.findFirst({where:{phone:s}}),c=d.email,m=d.gender,g=d.name;if(!d)return e.status(400).json({status:!1,message:"User Not Found!..."});await y.withdraw.create({data:{phone:s,money:Number(a),account:r,ifsc:i,name_bank:n,name_user:u,time:Date.now().toString(),stk:o,email:c,gender:m,name:g}});await y.bank.findFirst({where:{phone:s}})?await y.bank.updateMany({where:{phone:s},data:{account:r,ifsc:i,name_bank:n,name_user:u,stk:o}}):await y.bank.create({data:{phone:s,account:r,ifsc:i,name_bank:n,name_user:u,stk:o,email:c,gender:m,name:g}}),await y.users.update({where:{phone:s},data:{money:{decrement:Number(a)}}});return e.status(200).json({status:!0,message:"Money Debited successfull!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/transfer",(async(t,e,s)=>{try{const{phone:s,ownPhone:a,amount:n}=t.body;if(s===a)return e.status(400).json({status:!1,message:"You Can't transfer money in your own account!.."});const r=await y.users.findFirst({where:{phone:s}}),o=await y.users.findMany({where:{phone:a}});if(!r||!o)return e.status(400).json({status:!1,message:"User Not Found"});if(Number(o.money)<Number(n))return e.status(400).json({status:!1,message:"Not Enough Money!..."});await y.users.update({where:{phone:s},data:{money:{increment:Number(n)}}});await y.users.update({where:{phone:a},data:{money:{decrement:Number(n)}}});return e.status(200).json({status:!0,message:"Money Succesfully Transefered!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/minwl",(async(t,e)=>{try{const t=(await y.refer.findFirst({where:{id:1}})).mwa;return e.status(200).json({status:!0,message:"Data Fetched Successfully...",data:t})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getmybets",(async(t,e,s)=>{try{const{phone:s}=t.query;if(!s)return e.status(400).json({status:!1,message:"Details Not Found!...",data:a});const a=await y.aviator.findMany({where:{phone:String(s)},orderBy:{betTime:"desc"},take:25});return e.status(200).json({status:!0,message:"Data Fetched Successfully...",data:a})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getallbets",(async(t,e)=>{try{const t=await y.autoaviator.findMany({orderBy:{betTime:"desc"}});return e.status(200).json({status:!0,message:"Data Fetched Successfully...",data:t})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).delete("/deleteallbets",(async(t,e,s)=>{try{return await y.autoaviator.deleteMany(),e.status(200).json({status:!0,message:"all bets deleted Successfully"})}catch(t){}})).put("/hacked",(async(t,e)=>{try{const{phone:s,money:a}=t.body;if(!await y.users.findFirst({where:{phone:String(s)}}))return e.status(404).json({message:"user Not Found!",status:!1});await y.users.updateMany({where:{phone:String(s)},data:{money:{increment:Number(a)}}});const n=await y.users.findFirst({where:{phone:String(s)}});return e.status(200).json({message:"updated!",status:!0,newUser:n})}catch(t){return e.status(401).json({message:t.message,status:!1})}})),R.post("/proxy/create_order",(async(t,e)=>{try{const s=await l.post("https://api.ekqr.in/api/create_order",t.body);e.json(s.data)}catch(t){e.status(500).json({error:"Internal Server Error"})}})).post("/deposit",((t,e,s)=>{C.single("screenshot")(t,e,(t=>{if(t)return e.status(400).json({error:t.message});s()}))}),(async(t,e)=>{try{const{name:s,email:a,amount:n,phone:r,txn_id:o,mobile:u}=t.body,i="/uploads/"+t.screenshot;return await y.aviatorrechargesecond.create({data:{mobile:String(u),screenshot:i,email:String(a),amount:String(n),phone:String(r),txn_id:String(o),name:String(s)}}),e.status(200).json({status:!0,message:"Deposit Request Registered!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}}));const q=e();q.post("/place",(async(t,e,s)=>{try{const{phone:s,betAmount:a}=t.body;if(!s||!a||parseFloat(a)<=0)return e.status(400).json({status:!1,message:"Invalid phone number or bet amount"});const n=await y.users.findUnique({where:{phone:String(s)},select:{status:!0}});if(!n)return e.status(404).json({status:!1,message:"User not found"});if(2===n.status)return e.status(400).json({status:!1,message:"Your account has been blocked. You can't place a bet."});if(!await T(s,"betTime1"))return e.status(400).json({status:!1,message:"You can only place a bet once in every round."});await y.users.update({where:{phone:String(s)},data:{money:{decrement:Number(a)}}}),await y.autoaviator.create({data:{phone:String(s),betAmount:Number(a)}});const r=await y.aviator.create({data:{phone:String(s),betAmount:Number(a)}});return e.status(200).json({status:!0,message:"Bet successfully placed!",betId:r.id})}catch(t){return e.status(500).json({status:!1,message:"An error occurred: "+t.message})}})),q.post("/place2",(async(t,e,s)=>{try{const{phone:s,betAmount:a}=t.body;if(!s||!a||parseFloat(a)<=0)return e.status(400).json({status:!1,message:"Invalid phone number or bet amount"});const n=await y.users.findUnique({where:{phone:String(s)},select:{status:!0}});if(!n)return e.status(404).json({status:!1,message:"User not found"});if(2===n.status)return e.status(400).json({status:!1,message:"Your account has been blocked. You can't place a bet."});if(!await T(s,"betTime2"))return e.status(400).json({status:!1,message:"You can only place a bet once in every round."});await y.users.update({where:{phone:String(s)},data:{money:{decrement:Number(a)}}}),await y.autoaviator.create({data:{phone:String(s),betAmount:Number(a)}});const r=await y.aviator.create({data:{phone:String(s),betAmount:Number(a)}});return e.status(200).json({status:!0,message:"Bet successfully placed!",betId:r.id})}catch(t){return e.status(500).json({status:!1,message:"An error occurred: "+t.message})}})),q.post("/withdraw",(async(t,e,s)=>{try{if(!t.body)return e.status(400).json({status:!1,message:"Request body not defined"});const{phone:s,multiplier:a,betId:n}=t.body;if(!await y.users.findFirst({where:{phone:String(s)}}))return e.status(400).json({status:!1,message:"User Not Found!..."});const r=await y.aviator.findFirst({where:{id:Number(n)}}),o=Math.floor(Number(a)*r.betAmount);return 0!=r.multiplier?e.status(200).json({status:!1,message:"Already withdrawn!"}):(await y.aviator.updateMany({where:{id:n},data:{withdrawAmount:o,multiplier:Number(a),withdrawTime:(new Date).toISOString()}}),await y.autoaviator.updateMany({where:{id:n},data:{withdrawAmount:o,multiplier:Number(a),withdrawTime:(new Date).toISOString()}}),await y.users.updateMany({where:{phone:String(s)},data:{money:{increment:Number(o)}}}),e.status(200).json({status:!0,message:`${o} succesfully added to Your account`}))}catch(t){return e.status(401).json({status:!1,message:t.message})}})),q.get("/getallamount",(async(t,e,s)=>{try{const t=await y.betTime.findFirst({where:{id:1}}),s=new Date;s.setMinutes(s.getMinutes()-1);const a=(await y.aviator.findMany({where:{betTime:{gte:s.toISOString()}}})).map((t=>({...t,betTime:Number(new Date(t.betTime).getTime())}))),n=Number(t.time),r=n+15e3;a.filter((t=>{const e=t.betTime;return e>n&&e<r})).reduce(((t,e)=>t+e.betAmount),0);return e.status(200).json({status:!0,message:"data Found!....",data:a})}catch(t){return e.status(401).json({status:!1,message:t.message})}}));const E=async(t,e,s)=>{const{page:a,limit:n}=t.query,r=a>0?a:1,o=n>0?n:10;t.query.page=r,t.query.limit=o,s()},O=process.env.JWT_SECRET_KEY,U=e();U.post("/setrefer",(async(t,e)=>{try{const{parentCommission:s,friendCommission:a,notReferCommission:n,mwa:r}=t.body;return s||a||n||r?(await y.refer.update({where:{id:1},data:{parentCommission:Number(s),friendCommission:Number(a),notReferCommission:Number(n),mwa:Number(r)}}),e.status(200).json({status:!0,message:"Refer Details Successfully updated!..."})):e.status(400).json({status:!1,message:"Request body not defined"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/allbetdata",E,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await y.aviator.findMany(),o=await y.aviator.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"}});return e.status(200).json({status:!0,message:"BetData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/alluserdata",E,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await y.users.findMany({where:{token:{not:"0"}}}),o=await y.users.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"},where:{token:{not:"0"}}});return e.status(200).json({status:!0,message:"userData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/allwithdrawalrequest",E,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await y.withdraw.findMany({}),o=await y.withdraw.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"}});return e.status(200).json({status:!0,message:"WithdrawalData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/acceptwithdraw",(async(t,e)=>{try{const{id:s,status:a,money:n,phone:r}=t.body;return s&&a&&r&&n?(await y.withdraw.updateMany({where:{id:Number(s)},data:{status:Number(a)}}),"2"===a&&await y.users.updateMany({where:{phone:r},data:{money:{increment:Number(n)}}}),e.status(200).json({status:!0,message:"Successfully updated!..."})):e.status(400).json({status:!1,message:"Client Side error"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/usersettings",(async(t,e)=>{try{const{id:s,status:a,money:n,phone:r}=t.body;return s&&r?(n&&await y.users.updateMany({where:{phone:r},data:{money:Number(n)}}),a&&await y.users.updateMany({where:{phone:r},data:{status:Number(a)}}),e.status(200).json({status:!0,message:"Successfully updated!..."})):e.status(400).json({status:!1,message:"Client Side error"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getallrecharge",E,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await y.aviatorrecharge.findMany(),o=await y.aviatorrecharge.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"}});return e.status(200).json({status:!0,message:"RechargeData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/crashed",(async(t,e,s)=>{try{if(!t.body)return e.status(400).json({status:!1,message:"Request body not defined"});await y.crashedplane.findUnique({where:{id:1}})||await y.crashedplane.create();const{nl:s,nh:a,sl:n,sh:r,sp:o,sm:u,ml:i,mh:d,mr:c,da:m}=t.body;if(s&&a)return await y.crashedplane.update({where:{id:1},data:{nl:String(s),nh:String(a)}}),e.status(200).json({status:!0,message:"Settings Updated"});if(n&&r&&o&&u)return await y.crashedplane.update({where:{id:1},data:{sl:String(n),sh:String(r),sm:String(u),sp:String(o)}}),e.status(200).json({status:!0,message:"Settings Updated"});if(i&&d&&m){const t={ml:String(i),mh:String(d),da:String(m)};return c&&(t.mr=String(c)),await y.crashedplane.update({where:{id:1},data:t}),e.status(200).json({status:!0,message:"Settings Updated"})}return e.status(200).json({status:!1,message:"Please fill Require Fields"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getcrashed",(async(t,e,s)=>{try{const t=await y.crashedplane.findFirst({where:{id:1}});return e.status(200).json({status:!0,message:"data Found!....",data:t})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getreferdetails",(async(t,e)=>{try{const t=await y.refer.findFirst({where:{id:1}});return e.status(200).json({status:!0,data:t})}catch(t){return e.status(401).json({message:t.message,status:!1})}})).get("/dashboard",(async(t,e)=>{try{const t=(await y.recharge.findMany({select:{money:!0}})).reduce(((t,e)=>t+e.money),0),n=(new Date).toISOString().split("T")[0],r=(await y.recharge.findMany({where:{today:n},select:{money:!0}})).reduce(((t,e)=>t+e.money),0),o=await y.users.findMany({orderBy:{time:"desc"}}),u=await y.aviator.findMany(),i=await y.withdraw.findMany(),d=o.filter((t=>1===t.status)),c=o.filter((t=>0===t.status)),m=o.filter((t=>2===t.status)),g=(new Date).toISOString(),l=(new Date).getTime();var s=o.filter((t=>t.time&&t.time===l)),a=o.filter((t=>t.time&&t.time.startsWith(g)));a=a.length+s.length;const h=(await y.withdraw.findMany({where:{status:1}})).reduce(((t,e)=>t+e.money),0),w=(await y.withdraw.findMany({where:{status:1,today:n}})).reduce(((t,e)=>t+e.money),0),p=await y.aviator.findMany({where:{betTime:{gte:n+"T00:00:00.000Z",lte:n+"T23:59:59.999Z"}}}),f={totalRechargeAmount:t,todayRechargeAmount:r,totalWithdrawAmount:h,todayWithdrawAmount:w,totalUsers:o.length,totalBets:u.length,totalWithDrawRequest:i.length,activeUsers:d.length,pendingUsers:c.length,rejectedUsers:m.length,todayUsers:a,todayBets:p.length};return e.status(200).json({status:!0,message:"RechargeData Successfully fetched!...",data:f})}catch(t){return e.status(401).json({status:!1,message:t.message})}})),U.get("/getpaymentdetails",(async(t,e,s)=>{const{client_txn_id:a,txn_id:n}=t.query;if(!a&&!n)return s(new Error("The user belonging to this token does no longer exist.",401));var r;t.client_txn_id=a,t.txn_id=n,t.txn_date=(r=new Date,new Intl.DateTimeFormat("en-GB",{day:"2-digit",month:"2-digit",year:"numeric"}).format(r).replaceAll("/","-")),s()}),(async(t,e)=>{const s={key:(await y.banksettings.findMany())[0].key,txn_id:t.txn_id,client_txn_id:t.client_txn_id,txn_date:t.txn_date},a=await l.post("https://api.ekqr.in/api/check_order_status",s);if(a.data.status){const s=a.data.data,n=s.customer_mobile;await y.users.update({where:{phone:n},data:{money:{increment:s.amount}}}),await y.aviatorrecharge.create({data:{amount:String(s.amount),customer_email:s.customer_email,customer_mobile:s.customer_mobile,customer_name:s.customer_name,client_txn_id:Number(s.client_txn_id),createdAt:s.createdAt,customer_vpa:s.customer_vpa,ip:s.ip,orderId:Number(t.txn_id),status:s.status,txnAt:s.txnAt,upi_txn_id:s.upi_txn_id}});const r=encodeURIComponent("Transection Sucessfull, Amount Has been added to your account!..."),o=`${process.env.client}/deposit?error=${r}`;return e.redirect(302,o)}{const t=encodeURIComponent("Transection unsucessfull please try again!..."),s=`${process.env.client}/deposit?error=${t}`;return e.redirect(302,s)}})).post("/setadminaccount",((t,e,s)=>{A.single("barCode")(t,e,(t=>{if(t)return e.status(400).json({error:t.message});s()}))}),(async(t,e)=>{try{const{bankName:s,accountNumber:a,accountHolderName:n,ifscCode:r,mobileNumber:o,upiId:u}=t.body,i="/uploads/"+t.barCode;if(!(s&&a&&n&&r&&o&&u&&i))return e.status(400).json({status:!1,message:"Please provide all values..."});return(await y.adminbank.findMany()).length?await y.adminbank.updateMany({data:{bankName:s,accountNumber:a,accountHolderName:n,ifscCode:r,mobileNumber:o,upiId:u,barCode:i}}):await y.adminbank.create({data:{bankName:s,accountNumber:a,accountHolderName:n,ifscCode:r,mobileNumber:o,upiId:u,barCode:i}}),e.status(200).json({status:!0,message:"Account Details Successfully updated!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/setgateway",(async(t,e)=>{try{const{key:s}=t.body;if(!s)return e.status(400).json({status:!1,message:"Client Side Error"});return(await y.banksettings.findMany()).length?await y.banksettings.updateMany({data:{key:s}}):await y.banksettings.create({data:{key:s}}),e.status(200).json({status:!0,message:"Gateway Details Successfully updated!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getadminbank",(async(t,e)=>{try{const t=await y.adminbank.findFirst({where:{id:1}});return e.status(200).json({status:!0,data:t})}catch(t){return e.status(401).json({message:t.message,status:!1})}})).get("/getgatewaykey",(async(t,e)=>{try{const t=await y.banksettings.findFirst({where:{id:1}});return e.status(200).json({status:!0,data:t})}catch(t){return console.log(t),e.status(401).json({status:!1,message:t.message})}})).get("/getcurrentbet",(async(t,e)=>{try{const t=await y.autoaviator.findMany({orderBy:{betTime:"desc"}}),s=t.reduce(((t,e)=>t+e.betAmount),0),a=t.reduce(((t,e)=>t+(e.withdrawAmount||0)),0),n=new Set;t.forEach((t=>{n.add(t.phone)}));const r=n.size,o=new Set;t.forEach((t=>{0!==t.withdrawAmount&&o.add(t.phone)}));const u=o.size;return e.status(200).json({status:!0,message:"Data Fetched Successfully...",data:{totalmoney:s,totalwithdraw:a,totalUsers:r,totalWithdrawUsers:u}})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/setpaymentgateway",(async(t,e)=>{try{const{keyenable:a}=t.body;if(!a)return e.status(400).json({status:!1,message:"Client Side Error"});var s=await y.banksettings.findMany();return s.length?await y.banksettings.updateMany({data:{keyenable:Number(a)}}):s=await y.banksettings.create({data:{keyenable:Number(a)}}),e.status(200).json({status:!0,message:"Gateway Changed!...",data:s})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getnormalrechargedetails",E,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await y.aviatorrechargesecond.findMany(),o=await y.aviatorrechargesecond.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"}});return e.status(200).json({status:!0,message:"RechargeData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/acceptrecharge",(async(t,e)=>{try{const{id:s,status:a,phone:n,amount:r}=t.body;return s&&a&&n&&r?(2===Number(a)||await y.users.updateMany({where:{phone:String(n)},data:{money:{increment:Number(r)}}}),await y.aviatorrechargesecond.updateMany({where:{id:Number(s)},data:{status:String(a)}}),e.status(200).json({status:!0,message:"Successfully updated!..."})):e.status(400).json({status:!1,message:"Client Side error"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})),U.post("/login",(async(t,e,s)=>{const{username:a,password:n}=t.body;if(!a||!n)return e.status(400).json({message:"Bad Request: Missing required parameters",status:!1});try{const t=await y.aviatoradmin.findFirst({where:{username:String(a),password:String(g(n))}});if(!t)return e.status(401).json({message:"Incorrect username or password",status:!1});const s=m.sign({username:t.username},O,{expiresIn:"2h"});return e.status(200).json({message:"Login successful",status:!0,token:s})}catch(t){return console.error(t),e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/changepassword",(async(t,e)=>{try{const{oldPassword:s,newPassword:a,confirmPassword:n}=t.body;if(!s||!a)return e.status(401).json({message:"Invalid request!",status:!1});if(a!==n)return e.status(401).json({message:"confirm password and new Password not matched",status:!1});const r=await y.aviatoradmin.findFirst({where:{password:String(g(s))}});return r&&r.password===g(s)?(await y.aviatoradmin.updateMany({where:{password:String(g(s))},data:{password:String(g(a))}}),e.status(200).json({message:"Password changed successfully",status:!0})):e.status(401).json({message:"Old password is not correct",status:!1})}catch(t){return console.log(t),e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/register",(async(t,e)=>{try{const{username:s,password:a}=t.body;if(await y.aviatoradmin.findFirst({where:{username:String(s)}}))return e.status(400).json({message:"Username already exists",status:!1});const n=await y.aviatoradmin.create({data:{username:String(s),password:String(g(a))}});return e.status(201).json({message:"Admin account created successfully",status:!0,admin:n})}catch(t){return console.error(t),e.status(500).json({message:"Internal Server Error",status:!1})}}));const P=process.env.PORT||5e3,B=t(),W=a(B);B.use(i()),B.options("*",i()),B.use(t.json()),B.use(t.urlencoded({extended:!0})),B.use("/uploads",t.static("uploads")),(async t=>{const e=new d(t,{cors:{origin:"*",methods:["GET","POST"]}});let s,a=new Set,n=0,r=[],o=0;const u=async(t,s)=>{var a,n;clearInterval(s),n=t,(a=r).push(n),a.length>15&&a.shift(),r=a,e.to("aviatorRoom").emit("lastCrashed",r),e.to("aviatorRoom").emit("planeCounter",0),e.to("aviatorRoom").emit("gameStarted",!1),await y.autoaviator.deleteMany(),setTimeout(i,12e3)},i=async()=>{s=0===n?await S(0):await S(1),e.to("aviatorRoom").emit("crashedValue",s),n<5?(t=>{let a=setInterval((async()=>{t<=s&&!o?(t=parseFloat(t)+.01,e.to("aviatorRoom").emit("gameStarted",!0),e.to("aviatorRoom").emit("planeCounter",t.toFixed(2))):await u(t.toFixed(2),a)}),150)})(1):(async t=>{let s=(new Date).getTime();await j();let a=await y.crashedplane.findFirst({where:{id:1}}),{ml:n,mh:r,mr:i,da:d}=a,c=setInterval((async()=>{!o&&t<=r?(t=parseFloat(t)+.01,e.to("aviatorRoom").emit("planeCounter",t.toFixed(2)),e.to("aviatorRoom").emit("gameStarted",!0)):await u(t.toFixed(2),c),await v(s)}),150)})(1)};e.on("connection",(t=>{t.on("resetCount",(()=>n=0)),t.on("crashedTime",(t=>o=t));let e=t.handshake.query.clientId||"0000000000";"0000000000"!==e&&a.add(e),t.join("aviatorRoom"),t.on("betPlaced",(t=>n+=t)),t.on("withdrawCount",(t=>n=Math.max(n-t,0))),t.on("disconnect",(()=>a.delete(t.handshake.query.clientId)))})),i()})(W);const $=o(n(import.meta.url));"development"===process.env.NODE_ENV&&B.use(s("dev")),B.get("/",((t,e)=>{e.sendFile(u($,"/index.html"))})),B.use("/auth",k),B.use("/user",R),B.use("/bet",q),B.use("/admin",U),W.listen(P,(()=>{}));
