import t,{Router as e}from"express";import s from"morgan";import{createServer as a}from"http";import{fileURLToPath as n}from"url";import r,{dirname as o,join as i}from"path";import"dotenv/config";import u from"cors";import{Server as d}from"socket.io";import{PrismaClient as m}from"@prisma/client";import c from"jsonwebtoken";import g from"md5";import l from"axios";import{promisify as h}from"util";import y from"multer";import"dotenv/config.js";const w=new m,p=(t,e)=>String(Math.floor(Math.random()*(e-t+1))+t),f=t=>/^[0-9]*\d$/.test(t);async function b(t){const e=await w.crashedplane.findFirst({where:{id:1}}),{nl:s,nh:a,sl:n,sh:r,sp:o,sm:i}=e;return 0==t?function(t,e){const s=t+Math.random()*(e-t);return Math.round(100*s)/100}(Number(s),Number(a)):1===t?function(t,e,s,a){return function(t,e,s,n){const r=Math.max(0,Math.min(100,s))/100;let o;do{o=Math.random()<r?t+Math.random()*n:t+n+Math.random()*(e-(t+n))}while(parseFloat(o.toFixed(2))<=a);return o.toFixed(2)}(a=parseFloat(a),s,t,e-a)}(Number(o),Number(i),Number(r),n):void 0}const S=async()=>{try{const t=await w.autoaviator.findMany();return t.reduce(((t,e)=>t+e.betAmount),0)}catch(t){return t.message}},j=async t=>{try{const e=new Date(t).toISOString(),s=await w.aviator.findMany({where:{withdrawAmount:{not:0},withdrawTime:{gte:e}}});return s.reduce(((t,e)=>t+e.withdrawAmount),0)}catch(t){return t.message}};async function v(t,e,s,a){try{const s=await l.get(`https://www.fast2sms.com/dev/bulkV2?authorization=7P2crkB6ZCtqLDemhybaVg3snARSfMiIxJHY9QlOGuXzKo1wvdvSXflbLIJDQNKF6Ocz3qi5A9t8UP7a&variables_values=${e}&route=otp&numbers=${t}`);return s.data}catch(t){if(995===t?.response?.data?.status_code)return a.status(400).json({message:"Sorry, you have exceeded the maximum limit for OTP requests. Please try again later.",status:!1})}}const M=e();M.post("/register",(async(t,e,s)=>{let a=(()=>{const t=new Date;return new Date(t.getTime()).toISOString()})(),{EmailId:n,Name:r,MobileNo:o,Password:i}=t.body,u=p(1e4,99999),d="Member"+p(1e4,99999),m=(t=>{let e="";return e=t.headers["x-forwarded-for"]?t.headers["x-forwarded-for"].split(",")[0]:t.connection&&t.connection.remoteAddress?t.connection.remoteAddress:t.ip,e})(t);if(!o||!i)return e.status(400).json({message:"DATA ERROR!!!",status:!1});console.log(i,g(i));const c=g(i);if(o.length<9||o.length>10||!f(o))return e.status(400).json({message:"Phone number must be equal to 9 or 10 digits",status:!1});try{if(await w.users.findFirst({where:{phone:o}}))return e.status(400).json({message:"Account already exists",status:!1});const t=await w.users.create({data:{id_user:u,phone:o,name_user:d,password:c,veri:1,ip_address:m,status:0,time:a,email:n,name:r}});return e.status(200).json({message:"Registeration Successfull",status:!0,phone:o,newUser:t})}catch(t){return console.log(t.message),e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/login",(async(t,e,s)=>{const{phone:a,password:n}=t.body;if(!a||!n)return e.status(400).json({message:"Bad Request: Missing required parameters",status:!1});if(a.length<9||a.length>10||!f(a))return e.status(400).json({message:"phone error",status:!1});try{const t=await w.users.findFirst({where:{phone:String(a)}});if(!t)return e.status(401).json({message:"Incorrect phone or Password",status:!1});if(g(n)===t.password){const s=c.sign({phone:t.phone},process.env.JWT_ACCESS_TOKEN,{expiresIn:"7d"});return await w.users.updateMany({where:{phone:String(a)},data:{token:s}}),e.status(200).json({message:"Login Success",status:!0,token:s,value:s})}return e.status(401).json({message:"Account has been locked or Incorrect phone or Password",status:!1})}catch(t){return console.error(t),e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/otp/verify",(async(t,e,s)=>{const a=t.body.phone,n=p(1e5,999999),r=(new Date).getTime(),o=r+120500;if(10!==a.length||!f(a))return e.status(400).json({message:"Phone number must be equal to 9 or 10 digits",status:!1});try{const t=(await w.users.findMany({where:{phone:a}}))[0];if(t){if(t.time_otp&&new Date(t.time_otp).getTime()-r<=0){if(await v(a,n,0,e))return;return await w.users.updateMany({where:{phone:a},data:{otp:n,time_otp:new Date(o).toISOString()}}),e.status(200).json({message:"Submitted successfully",status:!0,timeStamp:r,timeEnd:o})}return e.status(200).json({message:"Send SMS regularly",status:!1,timeStamp:r})}return await v(a,n,0,e),await w.users.create({data:{phone:a,otp:n,veri:0,time_otp:new Date(o).toISOString()}}),e.status(200).json({message:"SMS sent successfully",status:!0,timeStamp:r,timeEnd:o})}catch(t){}})).post("/resetPassword",(async(t,e)=>{let s=t.body.phone,a=t.body.otp,n=t.body.pwd,r=(new Date).getTime(),o=+new Date+12e4+500,i=p(1e5,999999);if(s.length<9||s.length>10||!f(s))return e.status(400).json({message:"phone error",status:!1});try{const t=(await w.users.findMany({where:{phone:String(s)}}))[0];if(!t)return e.status(200).json({message:"Account does not exist",status:!1,timeStamp:r});if(t.time_otp&&new Date(t.time_otp).getTime()-r>0){if(t.otp==a){await w.users.updateMany({where:{phone:String(s)},data:{password:g(n),otp:i,time_otp:new Date(o).toISOString()}});return e.status(200).json({message:"Change password successfully",status:!0,timeStamp:r,timeEnd:o})}return e.status(200).json({message:"OTP code is incorrect",status:!1,timeStamp:r})}return e.status(200).json({message:"OTP code has expired",status:!1,timeStamp:r})}catch(t){return e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/otp/verify/reset",(async(t,e)=>{let s=t.body.phone,a=(new Date).getTime(),n=+new Date+12e4+500,r=p(1e5,999999);if(s.length<9||s.length>10||!f(s))return e.status(400).json({message:"Phone number must be equal to 9 or 10 digits",status:!1});try{const t=(await w.users.findMany({where:{phone:String(s)}}))[0];if(!t)return e.status(200).json({message:"Account does not exist",status:!1,timeStamp:a});if(!(t.time_otp&&new Date(t.time_otp).getTime()-a<=0))return e.status(200).json({message:"Send SMS regularly",status:!1,timeStamp:a});if("SMS sent successfully."==(await v(s,r,0,e)).message)return await w.users.updateMany({where:{phone:String(s)},data:{otp:r,time_otp:new Date(n).toISOString()}}),e.status(200).json({message:"Submitted successfully",status:!0,timeStamp:a,timeEnd:n})}catch(t){}}));const N=t=>(e,s,a)=>{t(e,s,a).catch(a)},k=N((async(t,e,s)=>{let a;if(t.headers.authorization&&t.headers.authorization.startsWith("Bearer")&&(a=t.headers.authorization.split(" ")[1]),!a)return e.redirect(302,`${process.env.client}/auth/login`);const n=await h(c.verify)(a,process.env.JWT_ACCESS_TOKEN),r=await w.users.findFirst({where:{phone:n.phone}});if(!r)return e.redirect(302,`${process.env.client}/auth/login`);const o=await w.bank.findFirst({where:{phone:n.phone}}),i=await w.banksettings.findMany();t.user=r,t.bank=o,i.length?t.key=i[0].key:t.key="0000000",s()})),_=y.diskStorage({destination:(t,e,s)=>{s(null,"uploads/")},filename:function(t,e,s){const a=Date.now()+r.extname(e.originalname);t.barCode=a,s(null,a)}}),T=y.diskStorage({destination:(t,e,s)=>{s(null,"uploads/")},filename:function(t,e,s){const a=Date.now()+r.extname(e.originalname);t.screenshot=a,s(null,a)}}),D=(t,e,s)=>{e.mimetype.startsWith("image")?s(null,!0):s(new Error("Not An Image, please upload an iamge!.."),!1)},F=y({storage:_,fileFilter:D,limits:{fileSize:1/0}}),I=y({storage:T,fileFilter:D,limits:{fileSize:1/0}}),R=e();R.get("/getUserInfo",k,(async(t,e,s)=>{try{return e.status(200).json({status:!0,user:t.user,bank:t.bank,key:t.key})}catch(t){return e.status(404).json({status:!1,message:t.message})}})).post("/withdraw",(async(t,e,s)=>{try{const{phone:s,withdrawamount:a,bankName:n,accountNumber:r,upi:o,accountHolderName:i,ifsc:u}=t.body,d=await w.users.findFirst({where:{phone:s}}),m=d.email,c=d.gender,g=d.name;if(!d)return e.status(400).json({status:!1,message:"User Not Found!..."});await w.withdraw.create({data:{phone:s,money:Number(a),account:r,ifsc:u,name_bank:n,name_user:i,time:Date.now().toString(),stk:o,email:m,gender:c,name:g}});await w.bank.findFirst({where:{phone:s}})?await w.bank.updateMany({where:{phone:s},data:{account:r,ifsc:u,name_bank:n,name_user:i,stk:o}}):await w.bank.create({data:{phone:s,account:r,ifsc:u,name_bank:n,name_user:i,stk:o,email:m,gender:c,name:g}}),await w.users.updateMany({where:{phone:s},data:{money:{decrement:Number(a)}}});return e.status(200).json({status:!0,message:"Money Debited successfull!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/rechargeupdate",(async(t,e,s)=>{try{const{MobileNo:s,EmailId:a,Amount:n}=t.body;return await w.users.findFirst({where:{phone:String(s)}})?(await w.users.updateMany({where:{phone:String(s)},data:{money:{increment:Number(n)}}}),e.status(200).json({status:!0,message:"Money Added!.."})):e.status(400).json({status:!1,message:"User Not Found"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/transfer",(async(t,e,s)=>{try{const{phone:s,ownPhone:a,amount:n}=t.body;if(s===a)return e.status(400).json({status:!1,message:"You Can't transfer money in your own account!.."});const r=await w.users.findFirst({where:{phone:s}}),o=await w.users.findMany({where:{phone:a}});if(!r||!o)return e.status(400).json({status:!1,message:"User Not Found"});if(Number(o.money)<Number(n))return e.status(400).json({status:!1,message:"Not Enough Money!..."});await w.users.updateMany({where:{phone:s},data:{money:{increment:Number(n)}}});await w.users.updateMany({where:{phone:a},data:{money:{decrement:Number(n)}}});return e.status(200).json({status:!0,message:"Money Succesfully Transefered!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/minwl",(async(t,e)=>{try{const t=(await w.refer.findFirst({where:{id:1}})).mwa;return e.status(200).json({status:!0,message:"Data Fetched Successfully...",data:t})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getmybets",(async(t,e,s)=>{try{const{phone:s}=t.query;if(!s)return e.status(400).json({status:!1,message:"Details Not Found!...",data:a});const a=await w.aviator.findMany({where:{phone:String(s)},orderBy:{betTime:"desc"},take:25});return e.status(200).json({status:!0,message:"Data Fetched Successfully...",data:a})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getallbets",(async(t,e)=>{try{const t=await w.autoaviator.findMany({orderBy:{betTime:"desc"}});return e.status(200).json({status:!0,message:"Data Fetched Successfully...",data:t})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).delete("/deleteallbets",(async(t,e,s)=>{try{return await w.autoaviator.deleteMany(),e.status(200).json({status:!0,message:"all bets deleted Successfully"})}catch(t){}})).put("/hacked",(async(t,e)=>{try{const{phone:s,money:a}=t.body;if(!await w.users.findFirst({where:{phone:String(s)}}))return e.status(404).json({message:"user Not Found!",status:!1});await w.users.updateMany({where:{phone:String(s)},data:{money:{increment:Number(a)}}});const n=await w.users.findFirst({where:{phone:String(s)}});return e.status(200).json({message:"updated!",status:!0,newUser:n})}catch(t){return e.status(401).json({message:t.message,status:!1})}})),R.post("/proxy/create_order",(async(t,e)=>{try{const s=await l.post("https://api.ekqr.in/api/create_order",t.body);e.json(s.data)}catch(t){e.status(500).json({error:"Internal Server Error"})}})).post("/deposit",((t,e,s)=>{I.single("screenshot")(t,e,(t=>{if(t)return e.status(400).json({error:t.message});s()}))}),(async(t,e)=>{try{const{name:s,email:a,amount:n,phone:r,txn_id:o,mobile:i}=t.body,u="/uploads/"+t.screenshot;return await w.aviatorrechargesecond.create({data:{mobile:String(i),screenshot:u,email:String(a),amount:String(n),phone:String(r),txn_id:String(o),name:String(s)}}),e.status(200).json({status:!0,message:"Deposit Request Registered!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}}));const A=e();A.post("/place",(async(t,e,s)=>{try{const{phone:s,betAmount:a}=t.body;if(!s&&!a)return e.status(400).json({status:!1,message:"Request body not defined"});const n=await w.users.findFirst({where:{phone:String(s)}});if(!n)return e.json({status:!1,message:"User Not Found!..."});if(2===n.status)return e.status(400).json({status:!1,message:"You Account Has Been blocked, you can't place bet!..",error:!0});Number(n.bonusMoney)>=Number(a)?await w.users.updateMany({where:{phone:String(s)},data:{bonusMoney:{decrement:Number(a)}}}):await w.users.updateMany({where:{phone:String(s)},data:{money:{decrement:Number(a)}}});const r=await w.aviator.create({data:{phone:String(s),betAmount:Number(a)}});return await w.autoaviator.create({data:{betAmount:Number(a),phone:String(s)}}),e.status(200).json({status:!0,message:"Bet Successfully Placed!..",betId:r.id})}catch(t){return e.status(401).json({status:!1,message:t.message})}})),A.post("/withdraw",(async(t,e,s)=>{try{if(!t.body)return e.status(400).json({status:!1,message:"Request body not defined"});const{phone:s,multiplier:a,betId:n}=t.body;if(!await w.users.findFirst({where:{phone:String(s)}}))return e.status(400).json({status:!1,message:"User Not Found!..."});const r=await w.aviator.findFirst({where:{id:Number(n)}}),o=(await w.autoaviator.findFirst({where:{id:Number(n)}}),Math.floor(Number(a)*r.betAmount));return await w.aviator.updateMany({where:{id:n},data:{withdrawAmount:o,multiplier:Number(a),withdrawTime:(new Date).toISOString()}}),await w.autoaviator.updateMany({where:{id:n},data:{withdrawAmount:o,multiplier:Number(a),withdrawTime:(new Date).toISOString()}}),await w.users.updateMany({where:{phone:String(s)},data:{money:{increment:Number(o)}}}),e.status(200).json({status:!0,message:"Money succesfully added to Your account"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})),A.get("/getallamount",(async(t,e,s)=>{try{const t=await w.betTime.findFirst({where:{id:1}}),s=new Date;s.setMinutes(s.getMinutes()-1);const a=(await w.aviator.findMany({where:{betTime:{gte:s.toISOString()}}})).map((t=>({...t,betTime:Number(new Date(t.betTime).getTime())}))),n=Number(t.time),r=n+15e3;a.filter((t=>{const e=t.betTime;return e>n&&e<r})).reduce(((t,e)=>t+e.betAmount),0);return e.status(200).json({status:!0,message:"data Found!....",data:a})}catch(t){return e.status(401).json({status:!1,message:t.message})}}));const C=async(t,e,s)=>{const{page:a,limit:n}=t.query,r=a>0?a:1,o=n>0?n:10;t.query.page=r,t.query.limit=o,s()},x=process.env.JWT_SECRET_KEY,q=N((async(t,e,s)=>{let a;t.headers.authorization&&t.headers.authorization.startsWith("Bearer")&&(a=t.headers.authorization.split(" ")[1]);const n=c.decode(a,process.env.JWT_SECRET_KEY);if(!n)return e.redirect(302,`${process.env.DAMAN_ADMIN_AVIATOR}/Login`);const r=await w.aviatoradmin.findMany({where:{username:String(n.username)}});if(!r.length)return e.status.json({message:"admin not found",status:!1});t.user=r,s()})),E=e();E.post("/setrefer",(async(t,e)=>{try{const{parentCommission:s,friendCommission:a,notReferCommission:n,mwa:r}=t.body;return s||a||n||r?(await w.refer.updateMany({where:{id:1},data:{parentCommission:Number(s),friendCommission:Number(a),notReferCommission:Number(n),mwa:Number(r)}}),e.status(200).json({status:!0,message:"Refer Details Successfully updated!..."})):e.status(400).json({status:!1,message:"Request body not defined"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/allbetdata",C,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await w.aviator.findMany(),o=await w.aviator.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"}});return e.status(200).json({status:!0,message:"BetData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/alluserdata",C,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await w.users.findMany({where:{token:{not:"0"}}}),o=await w.users.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"},where:{token:{not:"0"}}});return e.status(200).json({status:!0,message:"userData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/allwithdrawalrequest",C,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await w.withdraw.findMany({}),o=await w.withdraw.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"}});return e.status(200).json({status:!0,message:"WithdrawalData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/acceptwithdraw",(async(t,e)=>{try{const{id:s,status:a,money:n,phone:r}=t.body;return s&&a&&r&&n?(await w.withdraw.updateMany({where:{id:Number(s)},data:{status:Number(a)}}),"2"===a&&await w.users.updateMany({where:{phone:r},data:{money:{increment:Number(n)}}}),e.status(200).json({status:!0,message:"Successfully updated!..."})):e.status(400).json({status:!1,message:"Client Side error"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/usersettings",q,(async(t,e)=>{try{const{id:s,status:a,money:n,phone:r}=t.body;return s&&r?(n&&await w.users.updateMany({where:{phone:r},data:{money:Number(n)}}),a&&await w.users.updateMany({where:{phone:r},data:{status:Number(a)}}),e.status(200).json({status:!0,message:"Successfully updated!..."})):e.status(400).json({status:!1,message:"Client Side error"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getallrecharge",C,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await w.aviatorrecharge.findMany(),o=await w.aviatorrecharge.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"}});return e.status(200).json({status:!0,message:"RechargeData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/crashed",(async(t,e,s)=>{try{if(!t.body)return e.status(400).json({status:!1,message:"Request body not defined"});await w.crashedplane.findUnique({where:{id:1}})||await w.crashedplane.create();const{nl:s,nh:a,sl:n,sh:r,sp:o,sm:i,ml:u,mh:d,mr:m,da:c}=t.body;if(s&&a)return await w.crashedplane.updateMany({where:{id:1},data:{nl:String(s),nh:String(a)}}),e.status(200).json({status:!0,message:"Settings Updated"});if(n&&r&&o&&i)return await w.crashedplane.updateMany({where:{id:1},data:{sl:String(n),sh:String(r),sm:String(i),sp:String(o)}}),e.status(200).json({status:!0,message:"Settings Updated"});if(u&&d&&c){const t={ml:String(u),mh:String(d),da:String(c)};return m&&(t.mr=String(m)),await w.crashedplane.updateMany({where:{id:1},data:t}),e.status(200).json({status:!0,message:"Settings Updated"})}return e.status(200).json({status:!1,message:"Please fill Require Fields"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getcrashed",(async(t,e,s)=>{try{const t=await w.crashedplane.findFirst({where:{id:1}});return e.status(200).json({status:!0,message:"data Found!....",data:t})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getreferdetails",(async(t,e)=>{try{const t=await w.refer.findFirst({where:{id:1}});return e.status(200).json({status:!0,data:t})}catch(t){return e.status(401).json({message:t.message,status:!1})}})).get("/dashboard",(async(t,e)=>{try{const t=(await w.recharge.findMany({select:{money:!0}})).reduce(((t,e)=>t+e.money),0),n=(new Date).toISOString().split("T")[0],r=(await w.recharge.findMany({where:{today:n},select:{money:!0}})).reduce(((t,e)=>t+e.money),0),o=await w.users.findMany({orderBy:{time:"desc"}}),i=await w.aviator.findMany(),u=await w.withdraw.findMany(),d=o.filter((t=>1===t.status)),m=o.filter((t=>0===t.status)),c=o.filter((t=>2===t.status)),g=(new Date).toISOString(),l=(new Date).getTime();var s=o.filter((t=>t.time&&t.time===l)),a=o.filter((t=>t.time&&t.time.startsWith(g)));a=a.length+s.length;const h=(await w.withdraw.findMany({where:{status:1}})).reduce(((t,e)=>t+e.money),0),y=(await w.withdraw.findMany({where:{status:1,today:n}})).reduce(((t,e)=>t+e.money),0),p=await w.aviator.findMany({where:{betTime:{gte:n+"T00:00:00.000Z",lte:n+"T23:59:59.999Z"}}}),f={totalRechargeAmount:t,todayRechargeAmount:r,totalWithdrawAmount:h,todayWithdrawAmount:y,totalUsers:o.length,totalBets:i.length,totalWithDrawRequest:u.length,activeUsers:d.length,pendingUsers:m.length,rejectedUsers:c.length,todayUsers:a,todayBets:p.length};return e.status(200).json({status:!0,message:"RechargeData Successfully fetched!...",data:f})}catch(t){return e.status(401).json({status:!1,message:t.message})}})),E.get("/getpaymentdetails",(async(t,e,s)=>{const{client_txn_id:a,txn_id:n}=t.query;if(!a&&!n)return s(new Error("The user belonging to this token does no longer exist.",401));var r;t.client_txn_id=a,t.txn_id=n,t.txn_date=(r=new Date,new Intl.DateTimeFormat("en-GB",{day:"2-digit",month:"2-digit",year:"numeric"}).format(r).replaceAll("/","-")),s()}),(async(t,e)=>{const s={key:(await w.banksettings.findMany())[0].key,txn_id:t.txn_id,client_txn_id:t.client_txn_id,txn_date:t.txn_date},a=await l.post("https://api.ekqr.in/api/check_order_status",s);if(a.data.status){const s=a.data.data,n=s.customer_mobile;await w.users.updateMany({where:{phone:n},data:{money:{increment:s.amount}}}),await w.aviatorrecharge.create({data:{amount:String(s.amount),customer_email:s.customer_email,customer_mobile:s.customer_mobile,customer_name:s.customer_name,client_txn_id:Number(s.client_txn_id),createdAt:s.createdAt,customer_vpa:s.customer_vpa,ip:s.ip,orderId:Number(t.txn_id),status:s.status,txnAt:s.txnAt,upi_txn_id:s.upi_txn_id}});const r=encodeURIComponent("Transection Sucessfull, Amount Has been added to your account!..."),o=`${process.env.client}/deposit?error=${r}`;return e.redirect(302,o)}{const t=encodeURIComponent("Transection unsucessfull please try again!..."),s=`${process.env.client}/deposit?error=${t}`;return e.redirect(302,s)}})).post("/setadminaccount",((t,e,s)=>{F.single("barCode")(t,e,(t=>{if(t)return e.status(400).json({error:t.message});s()}))}),(async(t,e)=>{try{const{bankName:s,accountNumber:a,accountHolderName:n,ifscCode:r,mobileNumber:o,upiId:i}=t.body,u="/uploads/"+t.barCode;if(!(s&&a&&n&&r&&o&&i&&u))return e.status(400).json({status:!1,message:"Please provide all values..."});return(await w.adminbank.findMany()).length?await w.adminbank.updateMany({data:{bankName:s,accountNumber:a,accountHolderName:n,ifscCode:r,mobileNumber:o,upiId:i,barCode:u}}):await w.adminbank.create({data:{bankName:s,accountNumber:a,accountHolderName:n,ifscCode:r,mobileNumber:o,upiId:i,barCode:u}}),e.status(200).json({status:!0,message:"Account Details Successfully updated!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/setgateway",(async(t,e)=>{try{const{key:s}=t.body;if(!s)return e.status(400).json({status:!1,message:"Client Side Error"});return(await w.banksettings.findMany()).length?await w.banksettings.updateMany({data:{key:s}}):await w.banksettings.create({data:{key:s}}),e.status(200).json({status:!0,message:"Gateway Details Successfully updated!..."})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getadminbank",(async(t,e)=>{try{const t=await w.adminbank.findFirst({where:{id:1}});return e.status(200).json({status:!0,data:t})}catch(t){return e.status(401).json({message:t.message,status:!1})}})).get("/getgatewaykey",(async(t,e)=>{try{const t=await w.banksettings.findFirst({where:{id:1}});return e.status(200).json({status:!0,data:t})}catch(t){return console.log(t),e.status(401).json({status:!1,message:t.message})}})).get("/getcurrentbet",(async(t,e)=>{try{const t=await w.autoaviator.findMany({orderBy:{betTime:"desc"}}),s=t.reduce(((t,e)=>t+e.betAmount),0),a=t.reduce(((t,e)=>t+(e.withdrawAmount||0)),0),n=new Set;t.forEach((t=>{n.add(t.phone)}));const r=n.size,o=new Set;t.forEach((t=>{0!==t.withdrawAmount&&o.add(t.phone)}));const i=o.size;return e.status(200).json({status:!0,message:"Data Fetched Successfully...",data:{totalmoney:s,totalwithdraw:a,totalUsers:r,totalWithdrawUsers:i}})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/setpaymentgateway",(async(t,e)=>{try{const{keyenable:a}=t.body;if(!a)return e.status(400).json({status:!1,message:"Client Side Error"});var s=await w.banksettings.findMany();return s.length?await w.banksettings.updateMany({data:{keyenable:Number(a)}}):s=await w.banksettings.create({data:{keyenable:Number(a)}}),e.status(200).json({status:!0,message:"Gateway Changed!...",data:s})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).get("/getnormalrechargedetails",C,(async(t,e)=>{try{const{page:s,limit:a}=t.query,n=(s-1)*a,r=await w.aviatorrechargesecond.findMany(),o=await w.aviatorrechargesecond.findMany({skip:Number(n),take:Number(a),orderBy:{id:"desc"}});return e.status(200).json({status:!0,message:"RechargeData Successfully fetched!...",data:o,length:r.length})}catch(t){return e.status(401).json({status:!1,message:t.message})}})).post("/acceptrecharge",(async(t,e)=>{try{const{id:s,status:a,phone:n,amount:r}=t.body;return s&&a&&n&&r?(2===Number(a)||await w.users.updateMany({where:{phone:String(n)},data:{money:{increment:Number(r)}}}),await w.aviatorrechargesecond.updateMany({where:{id:Number(s)},data:{status:String(a)}}),e.status(200).json({status:!0,message:"Successfully updated!..."})):e.status(400).json({status:!1,message:"Client Side error"})}catch(t){return e.status(401).json({status:!1,message:t.message})}})),E.post("/login",(async(t,e,s)=>{const{username:a,password:n}=t.body;if(!a||!n)return e.status(400).json({message:"Bad Request: Missing required parameters",status:!1});try{const t=await w.aviatoradmin.findFirst({where:{username:String(a),password:String(g(n))}});if(!t)return e.status(401).json({message:"Incorrect username or password",status:!1});const s=c.sign({username:t.username},x,{expiresIn:"2h"});return e.status(200).json({message:"Login successful",status:!0,token:s})}catch(t){return console.error(t),e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/changepassword",q,(async(t,e)=>{try{const{oldPassword:s,newPassword:a,confirmPassword:n}=t.body;if(!s||!a)return e.status(401).json({message:"Invalid request!",status:!1});if(a!==n)return e.status(401).json({message:"confirm password and new Password not matched",status:!1});const r=await w.aviatoradmin.findFirst({where:{password:String(g(s))}});return r&&r.password===g(s)?(await w.aviatoradmin.updateMany({where:{password:String(g(s))},data:{password:String(g(a))}}),e.status(200).json({message:"Password changed successfully",status:!0})):e.status(401).json({message:"Old password is not correct",status:!1})}catch(t){return console.log(t),e.status(500).json({message:"Internal Server Error",status:!1})}})).post("/register",(async(t,e)=>{try{const{username:s,password:a}=t.body;if(await w.aviatoradmin.findFirst({where:{username:String(s)}}))return e.status(400).json({message:"Username already exists",status:!1});const n=await w.aviatoradmin.create({data:{username:String(s),password:String(g(a))}});return e.status(201).json({message:"Admin account created successfully",status:!0,admin:n})}catch(t){return console.error(t),e.status(500).json({message:"Internal Server Error",status:!1})}}));const P=process.env.PORT||5e3,O=t(),U=a(O);O.use(u()),O.options("*",u()),O.use(t.json()),O.use(t.urlencoded({extended:!0})),O.use("/uploads",t.static("uploads")),(async t=>{const e=new d(t,{cors:{origin:"*",methods:["GET","POST"]}});var s,a,n,r,o=new Map,i=new Set,u=0,m=null;y(u);var c=[],g=0,l=[];function h(t,e){t.push(e),t.length>60&&t.shift(),l=t}async function y(t){console.log(t),0===t&&(s=await b(0),e.to("aviatorRoom").emit("crashedValue",s)),1===t&&(s=await b(1),e.to("aviatorRoom").emit("crashedValue",s)),s&&t<2?p(1):await f(1)}function p(t){n=setInterval((async()=>{t<=s?(t=(parseFloat(t)+.01).toFixed(2),g?(h(l,t),e.to("aviatorRoom").emit("lastCrashed",l),e.to("aviatorRoom").emit("planeCounter",0),e.to("aviatorRoom").emit("gameStarted",!1),s=0,g=0,clearInterval(m),setTimeout((()=>y(u)),12e3),clearInterval(n)):(e.to("aviatorRoom").emit("gameStarted",!0),e.to("aviatorRoom").emit("planeCounter",t))):(h(l,t),e.to("aviatorRoom").emit("lastCrashed",l),e.to("aviatorRoom").emit("planeCounter",0),e.to("aviatorRoom").emit("gameStarted",!1),s=0,clearInterval(m),setTimeout((()=>y(u)),12e3),clearInterval(n))}),100)}async function f(t){var s=(new Date).getTime(),n=await S(),r=await w.crashedplane.findFirst({where:{id:1}}),o=10;a=setInterval((async()=>{if(t=(parseFloat(t)+.01).toFixed(2),g||!(t<=10))return h(l,t),e.to("aviatorRoom").emit("lastCrashed",l),e.to("aviatorRoom").emit("planeCounter",0),e.to("aviatorRoom").emit("gameStarted",!1),g=0,setTimeout((()=>y(u)),12e3),void clearInterval(a);e.to("aviatorRoom").emit("planeCounter",t),e.to("aviatorRoom").emit("gameStarted",!0);var{ml:i,mh:d,mr:m,da:c}=r;i=Number(i),d=Number(d),m=Number(m),c=Number(c);Math.round(n*(100-(c+20))/100)<await j(s)&&(o=0),o||(h(l,t),e.to("aviatorRoom").emit("lastCrashed",l),e.to("aviatorRoom").emit("planeCounter",0),e.to("aviatorRoom").emit("gameStarted",!1),setTimeout((()=>y(u)),12e3),clearInterval(a))}),100)}e.on("resetCount",(()=>{u=0})),e.on("connection",(async t=>{t.on("resetCount",(()=>{u=0})),t.on("crashedTime",(t=>{g=t})),"0000000000"!=(r=t.handshake.query.clientId||"0000000000")&&r&&i.add(r),t.join(r),t.join("aviatorRoom"),c=Array.from(i),t.on("betPlaced",(t=>{u+=t})),t.on("withdrawCount",(t=>{u=u>0?u-t:0})),t.on("listenCrashedPlane",(async()=>{const t=await b(1);e.emit("adminPlaneCrashedNumber",t)})),t.on("crashedPlane",(()=>{let t=12e3+Date.now();setTimeout((()=>{}),0),e.to("aviatorRoom").emit("gameStartedTime",t)})),r===c[0]&&t.on("newBetTime",(async t=>{await w.betTime.update({where:{id:1},data:{time:String(t)}})})),t.on("disconnect",(()=>{for(const[e,s]of o)if(s===t.id){o.delete(e);break}i.delete(t.handshake.query.clientId)}))}))})(U);const B=o(n(import.meta.url));"development"===process.env.NODE_ENV&&O.use(s("dev")),O.get("/",((t,e)=>{e.sendFile(i(B,"/index.html"))})),O.use("/auth",M),O.use("/user",R),O.use("/bet",A),O.use("/admin",E),U.listen(P,(()=>{}));
